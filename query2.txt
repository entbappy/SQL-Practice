CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;


CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
    (001, 'Monika', 'Arora', 10000, '14-02-20 09.00.00', 'HR'),
    (002, 'Niharika', 'Vermna', 80000, '14-06-11 09.00.00', 'Admin'),
    (003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
    (004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
    (005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
    (006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
    (007, 'Satish', 'Kumer', 75000, '14-01-20 09.00.00', 'Account'),
    (008, 'Geeta', 'Rani', 90000, '14-04-11 09.00.00', 'Account');
    
SELECT * FROM Worker;  


CREATE TABLE Bonus (
	WORKER_REF_ID INT,
    BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
    FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);


INSERT INTO Bonus
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
    (001, 5000, '16-02-20'),
    (002, 3000, '16-06-11'),
    (003, 4000, '16-02-20'),
    (001, 4500, '16-02-20'),
    (002, 3500, '16-02-11');


SELECT * FROM Bonus; 


CREATE TABLE Title (
	WORKER_REF_ID INT,
    WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
    FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);


INSERT INTO Title
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
    (001, 'Manager', '2016-02-20 00:00:00'),
    (002, 'Executive', '2016-06-11 00:00:00'),
    (008, 'Executive', '2016-06-11 00:00:00'),
    (005, 'Manager', '2016-06-11 00:00:00'),
    (004, 'Asst. Manager', '2016-06-11 00:00:00'),
    (007, 'Executive', '2016-06-11 00:00:00'),
    (006, 'Lead', '2016-06-11 00:00:00'),
    (003, 'Lead', '2016-06-11 00:00:00');



--- CMD


SELECT FIRST_NAME, SALARY FROM Worker;

SELECT 77 + 1;
SELECT now();

SELECT * FROM Worker WHERE SALARY>90000;

-- WHERE
SELECT * FROM Worker WHERE DEPARTMENT='HR';

-- BETWEEN
SELECT * FROM Worker WHERE SALARY BETWEEN 80000 AND 300000;

-- reduce OR statement
-- HR, ADMIN
-- OR
SELECT * FROM Worker WHERE DEPARTMENT='HR' OR DEPARTMENT='Admin';

-- better way than OR: IN   
SELECT * FROM Worker WHERE DEPARTMENT IN ('HR', 'Admin');

-- NOT
SELECT * FROM Worker WHERE DEPARTMENT NOT IN ('HR', 'Admin');

-- IS NULL

SELECT * FROM Customer WHERE DEPARTMENT is NULL;

-- WILDCARD 
SELECT * FROM Worker WHERE FIRST_NAME LIKE '%i%';

SELECT * FROM Worker WHERE FIRST_NAME LIKE '_i%';

-- SORTING USING ORDER BY
SELECT * FROM Worker ORDER BY SALARY;
   
SELECT * FROM Worker ORDER BY SALARY DESC;

-- DISTINCT
SELECT DISTINCT DEPARTMENT FROM Worker;

-- GROUP BY
SELECT DEPARTMENT, COUNT(DEPARTMENT) FROM Worker GROUP BY DEPARTMENT;

-- AVG SALARY PER DEPARTMENT
SELECT DEPARTMENT, AVG(SALARY) FROM Worker GROUP BY DEPARTMENT;

-- MIN 
SELECT DEPARTMENT, MIN(SALARY) FROM Worker GROUP BY DEPARTMENT;

-- MAX
SELECT DEPARTMENT, MAX(SALARY) FROM Worker GROUP BY DEPARTMENT;

-- SUM 
SELECT DEPARTMENT, SUM(SALARY) FROM Worker GROUP BY DEPARTMENT;

-- GROUP BY HAVING
SELECT DEPARTMENT, COUNT(DEPARTMENT) FROM Worker GROUP BY DEPARTMENT HAVING COUNT(DEPARTMENT) > 2;




---- Query----------


CREATE TABLE account(
ID INT PRIMARY KEY,
NAME VARCHAR(255) UNIQUE,
BALANCE INT,
CONSTRAINT acc_balance_chk CHECK(BALANCE > 1000)
);

INSERT INTO account(ID, NAME, BALANCE)
VALUES (1, 'ALEX', 10000);

SELECT * FROM account;


---- Query----------


CREATE TABLE account(
ID INT PRIMARY KEY,
NAME VARCHAR(255) UNIQUE,
BALANCE INT NOT NULL DEFAULT 0
);

INSERT INTO account(ID, NAME)
VALUES (1, 'ALEX');

SELECT * FROM account;





-- ADD NEW COLUMN
AlTER TABLE account ADD interest FLOAT NOT NULL DEFAULT 0;

-- MODIFY
AlTER TABLE account MODIFY interest DOUBLE NOT NULL DEFAULT 0;

-- DESCRIBE
DESC account;

-- MODIFY
AlTER TABLE account CHANGE COLUMN interest saving FLOAT NOT NULL DEFAULT 0;

-- DROP COLUMN
AlTER TABLE account DROP COLUMN saving;

-- RENAME THE TABLE
AlTER TABLE account RENAME TO detailts;

SELECT * FROM account;


-- UPDATE
UPDATE customer SET FIRST_NAME='Babber', LAST_NAME='Love' WHERE WORKER_ID=1;

-- UPDATE MULTIPLE ROWS
SET SQL_SAFE_UPDATES = 0;
UPDATE customer SET SALARY = 1010;

-- DELETE
DELETE FROM customer WHERE WORKER_ID = 1;

-- DELETE ALL
SET SQL_SAFE_UPDATES = 0;
DELETE FROM customer;



-- REPLACE
REPLACE INTO Customer (WORKER_ID, DEPARTMENT)
	VALUES(1,'BOOS');

REPLACE INTO Customer (WORKER_ID, DEPARTMENT)
	VALUES(2,'CEO');
    
REPLACE INTO Customer SET WORKER_ID = 2 , DEPARTMENT = 'CTO';

-- NOT USED SYNTEX
REPLACE INTO Customer (WORKER_ID, FIRST_NAME, DEPARTMENT )
	SELECT WORKER_ID, FIRST_NAME, DEPARTMENT
    FROM Customer WHERE WORKER_ID = 2;


 
    
    